# Checking the btparser. -*- Autotest -*-

AT_BANNER([Kerneloops stacktraces])

## -------------------------- ##
## btp_koops_stacktrace_parse ##
## -------------------------- ##

AT_TESTFUN([btp_koops_stacktrace_parse],
[[
#include <lib/koops_stacktrace.h>
#include <lib/koops_frame.h>
#include <lib/location.h>
#include <assert.h>
#include <stdlib.h>

static void
check(const char *path,
      const char *first_function_name,
      const char *last_function_name,
      int frame_count)
{
  char *full_input = btp_file_to_string(path);
  assert(full_input);
  char *input = full_input;

  struct btp_location location;
  btp_location_init(&location);
  struct btp_koops_stacktrace *stacktrace =
      btp_koops_stacktrace_parse(&input, &location);

  assert(stacktrace);
  assert(*input == '\0');
  assert(0 == strcmp(stacktrace->frames->function_name, first_function_name));

  struct btp_koops_frame *last = stacktrace->frames;
  while (last->next)
  {
      puts(last->function_name);
      last = last->next;
  }
  assert(0 == strcmp(last->function_name, last_function_name));

  printf("expected: %d, got: %d\n", frame_count, btp_koops_stacktrace_get_frame_count(stacktrace));
  assert(frame_count == btp_koops_stacktrace_get_frame_count(stacktrace));

  btp_koops_stacktrace_free(stacktrace);
  free(full_input);
}


int
main(void)
{
  check("../../kerneloopses/gitlog-01", "unwind_backtrace", "kthread", 15);
  check("../../kerneloopses/gitlog-02", "unwind_backtrace", "cpu_idle", 27);
  check("../../kerneloopses/gitlog-03", "lockdep_rcu_suspicious", "system_call_fastpath", 19);
  return 0;
}
]])